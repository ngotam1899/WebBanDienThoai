{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nimport React, { useContext, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { tagPropType } from '../utils/helper.js';\nimport CButton from '../button/CButton';\nimport CLink from '../link/CLink';\nimport { Context } from './CDropdown'; //component - CoreUI / CDropdownToggle\n\nvar CDropdownToggle = function CDropdownToggle(props) {\n  var _togglerAttrs;\n\n  var className = props.className,\n      innerRef = props.innerRef,\n      onClick = props.onClick,\n      caret = props.caret,\n      split = props.split,\n      tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"innerRef\", \"onClick\", \"caret\", \"split\", \"tag\"]);\n\n  var _useContext = useContext(Context),\n      reference = _useContext.reference,\n      setReference = _useContext.setReference,\n      isOpen = _useContext.isOpen,\n      setIsOpen = _useContext.setIsOpen,\n      inNav = _useContext.inNav,\n      setSplit = _useContext.setSplit;\n\n  innerRef && innerRef(reference);\n  useEffect(function () {\n    setSplit(split);\n  });\n\n  var click = function click(e) {\n    if (props.disabled) {\n      return;\n    }\n\n    onClick && onClick(e);\n    setIsOpen(!isOpen);\n  };\n\n  var Tag = tag || (inNav ? CLink : CButton);\n  var classes = classNames(className, {\n    'dropdown-toggle': caret && !split,\n    'nav-link': inNav\n  });\n  var togglerAttrs = (_togglerAttrs = {\n    onClick: click,\n    'aria-expanded': isOpen ? 'true' : 'false',\n    'aria-haspopup': 'true',\n    'aria-label': 'Dropdown toggle'\n  }, _togglerAttrs[\"\" + (tag && typeof tag === 'string' ? 'ref' : 'innerRef')] = setReference, _togglerAttrs);\n\n  if (split) {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(CButton, attributes, props.children), /*#__PURE__*/React.createElement(CButton, _extends({\n      className: \"dropdown-toggle dropdown-toggle-split\"\n    }, togglerAttrs, attributes), ''));\n  } else {\n    return /*#__PURE__*/React.createElement(Tag, _extends({\n      className: classes\n    }, togglerAttrs, attributes));\n  }\n};\n\nCDropdownToggle.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  tag: tagPropType,\n  children: PropTypes.node,\n  className: PropTypes.string,\n  //\n  innerRef: PropTypes.oneOfType([PropTypes.object, PropTypes.func, PropTypes.string]),\n  caret: PropTypes.bool,\n  onClick: PropTypes.func,\n  split: PropTypes.bool,\n  disabled: PropTypes.bool\n} : {};\nCDropdownToggle.defaultProps = {\n  caret: true\n};\nexport default CDropdownToggle;","map":{"version":3,"sources":["C:/Users/ngota/Downloads/coreui-free-react-admin-template-master/node_modules/@coreui/react/es/dropdown/CDropdownToggle.js"],"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","_objectWithoutPropertiesLoose","excluded","sourceKeys","keys","indexOf","React","useContext","useEffect","PropTypes","classNames","tagPropType","CButton","CLink","Context","CDropdownToggle","props","_togglerAttrs","className","innerRef","onClick","caret","split","tag","attributes","_useContext","reference","setReference","isOpen","setIsOpen","inNav","setSplit","click","e","disabled","Tag","classes","togglerAttrs","createElement","Fragment","children","propTypes","process","env","NODE_ENV","node","string","oneOfType","object","func","bool","defaultProps"],"mappings":"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","sourcesContent":["function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React, { useContext, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { tagPropType } from '../utils/helper.js';\nimport CButton from '../button/CButton';\nimport CLink from '../link/CLink';\nimport { Context } from './CDropdown'; //component - CoreUI / CDropdownToggle\n\nvar CDropdownToggle = function CDropdownToggle(props) {\n  var _togglerAttrs;\n\n  var className = props.className,\n      innerRef = props.innerRef,\n      onClick = props.onClick,\n      caret = props.caret,\n      split = props.split,\n      tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"innerRef\", \"onClick\", \"caret\", \"split\", \"tag\"]);\n\n  var _useContext = useContext(Context),\n      reference = _useContext.reference,\n      setReference = _useContext.setReference,\n      isOpen = _useContext.isOpen,\n      setIsOpen = _useContext.setIsOpen,\n      inNav = _useContext.inNav,\n      setSplit = _useContext.setSplit;\n\n  innerRef && innerRef(reference);\n  useEffect(function () {\n    setSplit(split);\n  });\n\n  var click = function click(e) {\n    if (props.disabled) {\n      return;\n    }\n\n    onClick && onClick(e);\n    setIsOpen(!isOpen);\n  };\n\n  var Tag = tag || (inNav ? CLink : CButton);\n  var classes = classNames(className, {\n    'dropdown-toggle': caret && !split,\n    'nav-link': inNav\n  });\n  var togglerAttrs = (_togglerAttrs = {\n    onClick: click,\n    'aria-expanded': isOpen ? 'true' : 'false',\n    'aria-haspopup': 'true',\n    'aria-label': 'Dropdown toggle'\n  }, _togglerAttrs[\"\" + (tag && typeof tag === 'string' ? 'ref' : 'innerRef')] = setReference, _togglerAttrs);\n\n  if (split) {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(CButton, attributes, props.children), /*#__PURE__*/React.createElement(CButton, _extends({\n      className: \"dropdown-toggle dropdown-toggle-split\"\n    }, togglerAttrs, attributes), ''));\n  } else {\n    return /*#__PURE__*/React.createElement(Tag, _extends({\n      className: classes\n    }, togglerAttrs, attributes));\n  }\n};\n\nCDropdownToggle.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  tag: tagPropType,\n  children: PropTypes.node,\n  className: PropTypes.string,\n  //\n  innerRef: PropTypes.oneOfType([PropTypes.object, PropTypes.func, PropTypes.string]),\n  caret: PropTypes.bool,\n  onClick: PropTypes.func,\n  split: PropTypes.bool,\n  disabled: PropTypes.bool\n} : {};\nCDropdownToggle.defaultProps = {\n  caret: true\n};\nexport default CDropdownToggle;"]},"metadata":{},"sourceType":"module"}