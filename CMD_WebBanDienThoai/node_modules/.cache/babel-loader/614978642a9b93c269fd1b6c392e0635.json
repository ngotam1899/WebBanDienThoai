{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nimport React, { useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport CScrollbar from './CScrollbar';\nimport { Context } from './CSidebar'; //component - CoreUI / CSidebarNav\n\nvar CSidebarNav = function CSidebarNav(props) {\n  var className = props.className,\n      innerRef = props.innerRef,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"innerRef\"]);\n\n  var _useContext = useContext(Context),\n      scrollbarExist = _useContext.scrollbarExist;\n\n  var navClasses = classNames('c-sidebar-nav', 'h-100', className); //state\n\n  var isRtl = getComputedStyle(document.querySelector('html')).direction === 'rtl';\n  return /*#__PURE__*/React.createElement(CScrollbar, _extends({\n    settings: {\n      suppressScrollX: !isRtl\n    },\n    className: navClasses,\n    innerRef: innerRef,\n    switcher: scrollbarExist,\n    tag: \"ul\"\n  }, attributes));\n};\n\nCSidebarNav.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  className: PropTypes.string,\n  children: PropTypes.node,\n  //\n  innerRef: PropTypes.oneOfType([PropTypes.object, PropTypes.func, PropTypes.string])\n} : {};\nexport default CSidebarNav;","map":{"version":3,"sources":["C:/Users/ngota/Downloads/coreui-free-react-admin-template-master/node_modules/@coreui/react/es/template/CSidebarNav.js"],"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","_objectWithoutPropertiesLoose","excluded","sourceKeys","keys","indexOf","React","useContext","PropTypes","classNames","CScrollbar","Context","CSidebarNav","props","className","innerRef","attributes","_useContext","scrollbarExist","navClasses","isRtl","getComputedStyle","document","querySelector","direction","createElement","settings","suppressScrollX","switcher","tag","propTypes","process","env","NODE_ENV","string","children","node","oneOfType","object","func"],"mappings":"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","sourcesContent":["function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React, { useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport CScrollbar from './CScrollbar';\nimport { Context } from './CSidebar'; //component - CoreUI / CSidebarNav\n\nvar CSidebarNav = function CSidebarNav(props) {\n  var className = props.className,\n      innerRef = props.innerRef,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"innerRef\"]);\n\n  var _useContext = useContext(Context),\n      scrollbarExist = _useContext.scrollbarExist;\n\n  var navClasses = classNames('c-sidebar-nav', 'h-100', className); //state\n\n  var isRtl = getComputedStyle(document.querySelector('html')).direction === 'rtl';\n  return /*#__PURE__*/React.createElement(CScrollbar, _extends({\n    settings: {\n      suppressScrollX: !isRtl\n    },\n    className: navClasses,\n    innerRef: innerRef,\n    switcher: scrollbarExist,\n    tag: \"ul\"\n  }, attributes));\n};\n\nCSidebarNav.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  className: PropTypes.string,\n  children: PropTypes.node,\n  //\n  innerRef: PropTypes.oneOfType([PropTypes.object, PropTypes.func, PropTypes.string])\n} : {};\nexport default CSidebarNav;"]},"metadata":{},"sourceType":"module"}