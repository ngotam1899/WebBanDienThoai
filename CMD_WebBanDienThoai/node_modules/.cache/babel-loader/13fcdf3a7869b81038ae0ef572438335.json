{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\ngota\\\\Downloads\\\\coreui-free-react-admin-template-master\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\ngota\\\\Downloads\\\\coreui-free-react-admin-template-master\\\\src\\\\views\\\\users\\\\User.js\";\n\nimport React from 'react';\nimport { CCard, CCardBody, CCardHeader, CCol, CRow } from '@coreui/react';\nimport CIcon from '@coreui/icons-react';\nimport usersData from './UsersData';\n\nvar User = function User(_ref) {\n  var match = _ref.match;\n  var user = usersData.find(function (user) {\n    return user.id.toString() === match.params.id;\n  });\n  var userDetails = user ? Object.entries(user) : [['id', /*#__PURE__*/React.createElement(\"span\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 14\n    }\n  }, /*#__PURE__*/React.createElement(CIcon, {\n    className: \"text-muted\",\n    name: \"cui-icon-ban\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 20\n    }\n  }), \" Not found\")]];\n  return /*#__PURE__*/React.createElement(CRow, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(CCol, {\n    lg: 6,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(CCard, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(CCardHeader, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 11\n    }\n  }, \"User id: \", match.params.id), /*#__PURE__*/React.createElement(CCardBody, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"table\", {\n    className: \"table table-striped table-hover\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 17\n    }\n  }, userDetails.map(function (_ref2, index) {\n    var _ref3 = _slicedToArray(_ref2, 2),\n        key = _ref3[0],\n        value = _ref3[1];\n\n    return /*#__PURE__*/React.createElement(\"tr\", {\n      key: index.toString(),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 27\n      }\n    }, \"\".concat(key, \":\")), /*#__PURE__*/React.createElement(\"td\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(\"strong\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 31\n      }\n    }, value)));\n  })))))));\n};\n\nexport default User;","map":{"version":3,"sources":["C:/Users/ngota/Downloads/coreui-free-react-admin-template-master/src/views/users/User.js"],"names":["React","CCard","CCardBody","CCardHeader","CCol","CRow","CIcon","usersData","User","match","user","find","id","toString","params","userDetails","Object","entries","map","index","key","value"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,EAAgBC,SAAhB,EAA2BC,WAA3B,EAAwCC,IAAxC,EAA8CC,IAA9C,QAA0D,eAA1D;AACA,OAAOC,KAAP,MAAkB,qBAAlB;AAEA,OAAOC,SAAP,MAAsB,aAAtB;;AAEA,IAAMC,IAAI,GAAG,SAAPA,IAAO,OAAa;AAAA,MAAXC,KAAW,QAAXA,KAAW;AACxB,MAAMC,IAAI,GAAGH,SAAS,CAACI,IAAV,CAAgB,UAAAD,IAAI;AAAA,WAAIA,IAAI,CAACE,EAAL,CAAQC,QAAR,OAAuBJ,KAAK,CAACK,MAAN,CAAaF,EAAxC;AAAA,GAApB,CAAb;AACA,MAAMG,WAAW,GAAGL,IAAI,GAAGM,MAAM,CAACC,OAAP,CAAeP,IAAf,CAAH,GACtB,CAAC,CAAC,IAAD,eAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAM,oBAAC,KAAD;AAAO,IAAA,SAAS,EAAC,YAAjB;AAA8B,IAAA,IAAI,EAAC,cAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAN,eAAR,CAAD,CADF;AAGA,sBACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAE,CAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACYD,KAAK,CAACK,MAAN,CAAaF,EADzB,CADF,eAIE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAO,IAAA,SAAS,EAAC,iCAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEIG,WAAW,CAACG,GAAZ,CAAgB,iBAAeC,KAAf,EAAyB;AAAA;AAAA,QAAvBC,GAAuB;AAAA,QAAlBC,KAAkB;;AACvC,wBACE;AAAI,MAAA,GAAG,EAAEF,KAAK,CAACN,QAAN,EAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAQO,GAAR,OADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAASC,KAAT,CAAJ,CAFF,CADF;AAMD,GAPD,CAFJ,CADF,CADJ,CAJF,CADF,CADF,CADF;AA2BD,CAhCD;;AAkCA,eAAeb,IAAf","sourcesContent":["import React from 'react'\nimport { CCard, CCardBody, CCardHeader, CCol, CRow } from '@coreui/react'\nimport CIcon from '@coreui/icons-react'\n\nimport usersData from './UsersData'\n\nconst User = ({match}) => {\n  const user = usersData.find( user => user.id.toString() === match.params.id)\n  const userDetails = user ? Object.entries(user) : \n    [['id', (<span><CIcon className=\"text-muted\" name=\"cui-icon-ban\" /> Not found</span>)]]\n\n  return (\n    <CRow>\n      <CCol lg={6}>\n        <CCard>\n          <CCardHeader>\n            User id: {match.params.id}\n          </CCardHeader>\n          <CCardBody>\n              <table className=\"table table-striped table-hover\">\n                <tbody>\n                  {\n                    userDetails.map(([key, value], index) => {\n                      return (\n                        <tr key={index.toString()}>\n                          <td>{`${key}:`}</td>\n                          <td><strong>{value}</strong></td>\n                        </tr>\n                      )\n                    })\n                  }\n                </tbody>\n              </table>\n          </CCardBody>\n        </CCard>\n      </CCol>\n    </CRow>\n  )\n}\n\nexport default User\n"]},"metadata":{},"sourceType":"module"}