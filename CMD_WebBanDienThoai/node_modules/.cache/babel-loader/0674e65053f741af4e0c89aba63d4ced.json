{"ast":null,"code":"function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nimport React, { useState, useContext, useEffect, createRef } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport CIcon from '@coreui/icons-react';\nimport { useLocation } from 'react-router-dom';\nimport { Context } from './CSidebar';\nexport var iconProps = function iconProps(icon) {\n  if (typeof icon === 'object') {\n    var _extends2;\n\n    var key = icon.size ? 'className' : 'customClasses';\n    return _extends(_extends({}, icon), {}, (_extends2 = {}, _extends2[\"\" + key] = icon.customClasses || \"c-sidebar-nav-icon \" + icon.className, _extends2));\n  } else {\n    return {\n      customClasses: 'c-sidebar-nav-icon',\n      name: icon\n    };\n  }\n}; //component - CoreUI / CSidebarNavDropdown\n\nvar CSidebarNavDropdown = function CSidebarNavDropdown(props) {\n  var children = props.children,\n      className = props.className,\n      innerRef = props.innerRef,\n      icon = props.icon,\n      fontIcon = props.fontIcon,\n      name = props.name,\n      show = props.show,\n      route = props.route,\n      attributes = _objectWithoutPropertiesLoose(props, [\"children\", \"className\", \"innerRef\", \"icon\", \"fontIcon\", \"name\", \"show\", \"route\"]);\n\n  var ref = createRef();\n  innerRef && innerRef(ref);\n\n  var _useContext = useContext(Context),\n      dropdownMode = _useContext.dropdownMode,\n      openDropdown = _useContext.openDropdown,\n      setOpenDropdown = _useContext.setOpenDropdown;\n\n  var _useState = useState(show),\n      isOpen = _useState[0],\n      setIsOpen = _useState[1];\n\n  useEffect(function () {\n    setIsOpen(show);\n  }, [show]);\n  useEffect(function () {\n    !dropdownMode && (!openDropdown || !ref.current.contains(openDropdown)) && setIsOpen(false);\n  }, [openDropdown]);\n\n  var toggle = function toggle() {\n    !dropdownMode && setOpenDropdown(isOpen ? ref.current.parentNode.closest('.c-sidebar-nav-dropdown') : ref.current);\n    setIsOpen(!isOpen);\n  };\n\n  var path = '';\n\n  try {\n    path = useLocation().pathname;\n  } catch (e) {\n    console.warn(e);\n  }\n\n  useEffect(function () {\n    if (dropdownMode === 'close') {\n      setIsOpen(false);\n    } else if (dropdownMode === 'closeInactive' && route) {\n      setIsOpen(path.includes(route));\n    } else if ((!dropdownMode || dropdownMode !== 'noAction') && !isOpen && route) {\n      setIsOpen(path.includes(route));\n    }\n  }, [path]); //render\n\n  var classes = classNames('c-sidebar-nav-dropdown', isOpen && 'c-show', className);\n  var iconClasses = classNames('c-sidebar-nav-icon', fontIcon);\n  return /*#__PURE__*/React.createElement(\"li\", _extends({\n    className: classes\n  }, attributes, {\n    ref: ref\n  }), /*#__PURE__*/React.createElement(\"a\", {\n    className: \"c-sidebar-nav-dropdown-toggle\",\n    onClick: toggle\n  }, icon && /*#__PURE__*/React.createElement(CIcon, iconProps(icon)), fontIcon && /*#__PURE__*/React.createElement(\"i\", {\n    className: iconClasses\n  }), name), /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"c-sidebar-nav-dropdown-items\"\n  }, children));\n};\n\nCSidebarNavDropdown.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  className: PropTypes.string,\n  children: PropTypes.node,\n  //\n  innerRef: PropTypes.oneOfType([PropTypes.object, PropTypes.func, PropTypes.string]),\n  name: PropTypes.string,\n  icon: PropTypes.oneOfType([PropTypes.object, PropTypes.string]),\n  fontIcon: PropTypes.string,\n  show: PropTypes.bool,\n  route: PropTypes.string\n} : {};\nexport default CSidebarNavDropdown;","map":{"version":3,"sources":["C:/Users/ngota/Downloads/coreui-free-react-admin-template-master/node_modules/@coreui/react/es/template/CSidebarNavDropdown.js"],"names":["_objectWithoutPropertiesLoose","source","excluded","target","sourceKeys","Object","keys","key","i","length","indexOf","_extends","assign","arguments","prototype","hasOwnProperty","call","apply","React","useState","useContext","useEffect","createRef","PropTypes","classNames","CIcon","useLocation","Context","iconProps","icon","_extends2","size","customClasses","className","name","CSidebarNavDropdown","props","children","innerRef","fontIcon","show","route","attributes","ref","_useContext","dropdownMode","openDropdown","setOpenDropdown","_useState","isOpen","setIsOpen","current","contains","toggle","parentNode","closest","path","pathname","e","console","warn","includes","classes","iconClasses","createElement","onClick","propTypes","process","env","NODE_ENV","string","node","oneOfType","object","func","bool"],"mappings":"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","sourcesContent":["function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React, { useState, useContext, useEffect, createRef } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport CIcon from '@coreui/icons-react';\nimport { useLocation } from 'react-router-dom';\nimport { Context } from './CSidebar';\nexport var iconProps = function iconProps(icon) {\n  if (typeof icon === 'object') {\n    var _extends2;\n\n    var key = icon.size ? 'className' : 'customClasses';\n    return _extends(_extends({}, icon), {}, (_extends2 = {}, _extends2[\"\" + key] = icon.customClasses || \"c-sidebar-nav-icon \" + icon.className, _extends2));\n  } else {\n    return {\n      customClasses: 'c-sidebar-nav-icon',\n      name: icon\n    };\n  }\n}; //component - CoreUI / CSidebarNavDropdown\n\nvar CSidebarNavDropdown = function CSidebarNavDropdown(props) {\n  var children = props.children,\n      className = props.className,\n      innerRef = props.innerRef,\n      icon = props.icon,\n      fontIcon = props.fontIcon,\n      name = props.name,\n      show = props.show,\n      route = props.route,\n      attributes = _objectWithoutPropertiesLoose(props, [\"children\", \"className\", \"innerRef\", \"icon\", \"fontIcon\", \"name\", \"show\", \"route\"]);\n\n  var ref = createRef();\n  innerRef && innerRef(ref);\n\n  var _useContext = useContext(Context),\n      dropdownMode = _useContext.dropdownMode,\n      openDropdown = _useContext.openDropdown,\n      setOpenDropdown = _useContext.setOpenDropdown;\n\n  var _useState = useState(show),\n      isOpen = _useState[0],\n      setIsOpen = _useState[1];\n\n  useEffect(function () {\n    setIsOpen(show);\n  }, [show]);\n  useEffect(function () {\n    !dropdownMode && (!openDropdown || !ref.current.contains(openDropdown)) && setIsOpen(false);\n  }, [openDropdown]);\n\n  var toggle = function toggle() {\n    !dropdownMode && setOpenDropdown(isOpen ? ref.current.parentNode.closest('.c-sidebar-nav-dropdown') : ref.current);\n    setIsOpen(!isOpen);\n  };\n\n  var path = '';\n\n  try {\n    path = useLocation().pathname;\n  } catch (e) {\n    console.warn(e);\n  }\n\n  useEffect(function () {\n    if (dropdownMode === 'close') {\n      setIsOpen(false);\n    } else if (dropdownMode === 'closeInactive' && route) {\n      setIsOpen(path.includes(route));\n    } else if ((!dropdownMode || dropdownMode !== 'noAction') && !isOpen && route) {\n      setIsOpen(path.includes(route));\n    }\n  }, [path]); //render\n\n  var classes = classNames('c-sidebar-nav-dropdown', isOpen && 'c-show', className);\n  var iconClasses = classNames('c-sidebar-nav-icon', fontIcon);\n  return /*#__PURE__*/React.createElement(\"li\", _extends({\n    className: classes\n  }, attributes, {\n    ref: ref\n  }), /*#__PURE__*/React.createElement(\"a\", {\n    className: \"c-sidebar-nav-dropdown-toggle\",\n    onClick: toggle\n  }, icon && /*#__PURE__*/React.createElement(CIcon, iconProps(icon)), fontIcon && /*#__PURE__*/React.createElement(\"i\", {\n    className: iconClasses\n  }), name), /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"c-sidebar-nav-dropdown-items\"\n  }, children));\n};\n\nCSidebarNavDropdown.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  className: PropTypes.string,\n  children: PropTypes.node,\n  //\n  innerRef: PropTypes.oneOfType([PropTypes.object, PropTypes.func, PropTypes.string]),\n  name: PropTypes.string,\n  icon: PropTypes.oneOfType([PropTypes.object, PropTypes.string]),\n  fontIcon: PropTypes.string,\n  show: PropTypes.bool,\n  route: PropTypes.string\n} : {};\nexport default CSidebarNavDropdown;"]},"metadata":{},"sourceType":"module"}