"use strict";

exports.__esModule = true;
exports["default"] = void 0;

var _react = _interopRequireWildcard(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _classnames = _interopRequireDefault(require("classnames"));

var _helper = require("../utils/helper.js");

var _CDropdown = require("./CDropdown");

var _CLink = _interopRequireDefault(require("../link/CLink"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { "default": obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj["default"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

//component - CoreUI / CDropdownItem
var CDropdownItem = function CDropdownItem(props) {
  var _ref;

  var tag = props.tag,
      className = props.className,
      innerRef = props.innerRef,
      onClick = props.onClick,
      color = props.color,
      divider = props.divider,
      header = props.header,
      active = props.active,
      disabled = props.disabled,
      rest = _objectWithoutPropertiesLoose(props, ["tag", "className", "innerRef", "onClick", "color", "divider", "header", "active", "disabled"]);

  var _useContext = (0, _react.useContext)(_CDropdown.Context),
      setIsOpen = _useContext.setIsOpen;

  var isItem = !(header || divider);

  var click = function click(e) {
    if (disabled) {
      return;
    }

    onClick && onClick(e);
    isItem && setIsOpen(false);
  }; //render


  var tabIndex = isItem && !disabled ? null : -1;
  var role = tabIndex === null ? 'menuitem' : undefined;
  var Tag = tag || (!isItem ? 'div' : _CLink["default"]);
  var ref = (_ref = {}, _ref["" + (typeof Tag === 'string' ? 'ref' : 'innerRef')] = innerRef, _ref);
  var classes = (0, _classnames["default"])(className, 'dropdown-' + (header ? 'header' : divider ? 'divider' : 'item'), {
    active: active
  }, color && 'bg-' + color, disabled && Tag !== _CLink["default"] && 'disabled');
  return /*#__PURE__*/_react["default"].createElement(Tag, _extends({
    className: classes,
    tabIndex: tabIndex,
    role: role,
    disabled: disabled
  }, rest, {
    onClick: click
  }, ref));
};

CDropdownItem.propTypes = process.env.NODE_ENV !== "production" ? {
  tag: _helper.tagPropType,
  className: _propTypes["default"].string,
  //
  innerRef: _propTypes["default"].oneOfType([_propTypes["default"].object, _propTypes["default"].func, _propTypes["default"].string]),
  color: _propTypes["default"].string,
  divider: _propTypes["default"].bool,
  header: _propTypes["default"].bool,
  disabled: _propTypes["default"].bool,
  onClick: _propTypes["default"].func,
  active: _propTypes["default"].bool
} : {};
var _default = CDropdownItem;
exports["default"] = _default;
module.exports = exports.default;