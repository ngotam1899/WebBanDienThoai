"use strict";

exports.__esModule = true;
exports["default"] = exports.Context = void 0;

var _react = _interopRequireWildcard(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { "default": obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj["default"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

//component - CoreUI / CTabPane
var Context = _react["default"].createContext();

exports.Context = Context;

var CTabs = function CTabs(props) {
  var children = props.children,
      activeTab = props.activeTab,
      onActiveTabChange = props.onActiveTabChange;

  var _useState = (0, _react.useState)(),
      active = _useState[0],
      setActive = _useState[1];

  (0, _react.useEffect)(function () {
    return setActive(activeTab);
  }, [activeTab]);

  var setActiveTab = function setActiveTab(tab) {
    onActiveTabChange && onActiveTabChange(tab);
    setActive(tab);
  };

  return /*#__PURE__*/_react["default"].createElement(_react["default"].Fragment, null, /*#__PURE__*/_react["default"].createElement(Context.Provider, {
    value: {
      active: active,
      setActiveTab: setActiveTab
    }
  }, children));
};

CTabs.propTypes = process.env.NODE_ENV !== "production" ? {
  children: _propTypes["default"].node,
  activeTab: _propTypes["default"].oneOfType([_propTypes["default"].string, _propTypes["default"].number]),
  onActiveTabChange: _propTypes["default"].func
} : {};
CTabs.defaultProps = {
  activeTab: 0
};
var _default = CTabs;
exports["default"] = _default;