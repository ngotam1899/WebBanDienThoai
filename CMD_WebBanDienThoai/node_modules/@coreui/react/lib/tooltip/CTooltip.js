"use strict";

exports.__esModule = true;
exports["default"] = void 0;

var _react = _interopRequireWildcard(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _tippy = _interopRequireDefault(require("tippy.js"));

require("tippy.js/dist/tippy.css");

var _server = require("react-dom/server");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { "default": obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj["default"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

//component - CoreUI / CTooltip
var CTooltip = function CTooltip(props) {
  var children = props.children,
      content = props.content,
      interactive = props.interactive,
      placement = props.placement,
      trigger = props.trigger,
      advancedOptions = props.advancedOptions;
  var computedContent = (0, _react.useCallback)(function () {
    return typeof content === 'string' ? content : (0, _server.renderToString)(content);
  }, [content]);

  var config = _extends({
    allowHTML: true,
    content: computedContent,
    interactive: interactive,
    placement: placement,
    trigger: trigger
  }, advancedOptions);

  var key = (0, _react.useState)(Math.random().toString(36).substr(2))[0];
  var instance = (0, _react.useRef)();
  (0, _react.useEffect)(function () {
    if (instance.current) {
      instance.current.setProps(config);
    }
  });
  (0, _react.useEffect)(function () {
    var node = document.querySelector("[data-tooltip=\"" + key + "\"]");
    instance.current = (0, _tippy["default"])(node, config);
    return function () {
      return instance.current.destroy();
    };
  }, [key]);
  return /*#__PURE__*/_react["default"].createElement(_react["default"].Fragment, null, _react["default"].cloneElement(children, {
    'data-tooltip': key
  }));
};

CTooltip.propTypes = process.env.NODE_ENV !== "production" ? {
  children: _propTypes["default"].node,
  content: _propTypes["default"].oneOfType([_propTypes["default"].string, _propTypes["default"].node]),
  interactive: _propTypes["default"].bool,
  placement: _propTypes["default"].oneOf(['', 'top-end', 'top', 'top-start', 'bottom-end', 'bottom', 'bottom-start', 'right-start', 'right', 'right-end', 'left-start', 'left', 'left-end']),
  trigger: _propTypes["default"].string,
  advancedOptions: _propTypes["default"].object
} : {};
CTooltip.defaultProps = {
  content: '',
  interactive: false,
  placement: 'top',
  trigger: 'mouseenter focus',
  advancedOptions: {}
};
var _default = CTooltip;
exports["default"] = _default;
module.exports = exports.default;