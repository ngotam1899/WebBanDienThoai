"use strict";

exports.__esModule = true;
exports["default"] = void 0;

var _react = _interopRequireDefault(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _classnames = _interopRequireDefault(require("classnames"));

var _helper = require("../utils/helper.js");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

//component - CoreUI / CNavbar
var CNavbar = function CNavbar(props) {
  var _classNames;

  var Tag = props.tag,
      className = props.className,
      innerRef = props.innerRef,
      expandable = props.expandable,
      light = props.light,
      fixed = props.fixed,
      sticky = props.sticky,
      color = props.color,
      attributes = _objectWithoutPropertiesLoose(props, ["tag", "className", "innerRef", "expandable", "light", "fixed", "sticky", "color"]); //render


  var classes = (0, _classnames["default"])('navbar', className, light ? 'navbar-light' : 'navbar-dark', (_classNames = {}, _classNames["navbar-expand" + (expandable === true ? '' : "-" + expandable)] = expandable, _classNames["bg-" + color] = color, _classNames["fixed-" + fixed] = fixed, _classNames['sticky-top'] = sticky, _classNames));
  return /*#__PURE__*/_react["default"].createElement(Tag, _extends({
    className: classes
  }, attributes, {
    ref: innerRef
  }));
};

CNavbar.propTypes = process.env.NODE_ENV !== "production" ? {
  tag: _helper.tagPropType,
  className: _propTypes["default"].string,
  //
  innerRef: _propTypes["default"].oneOfType([_propTypes["default"].object, _propTypes["default"].func, _propTypes["default"].string]),
  light: _propTypes["default"].bool,
  color: _propTypes["default"].string,
  fixed: _propTypes["default"].oneOf(['', 'top', 'bottom']),
  sticky: _propTypes["default"].bool,
  expandable: _propTypes["default"].oneOfType([_propTypes["default"].bool, _propTypes["default"].string])
} : {};
CNavbar.defaultProps = {
  tag: 'nav'
};
var _default = CNavbar;
exports["default"] = _default;
module.exports = exports.default;