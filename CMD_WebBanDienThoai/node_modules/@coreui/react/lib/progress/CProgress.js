"use strict";

exports.__esModule = true;
exports["default"] = exports.Context = void 0;

var _react = _interopRequireDefault(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _classnames = _interopRequireDefault(require("classnames"));

var _CProgressBar = _interopRequireDefault(require("./CProgressBar"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

var Context = _react["default"].createContext({}); //component - CoreUI / CProgress


exports.Context = Context;

var CProgress = function CProgress(props) {
  var children = props.children,
      className = props.className,
      innerRef = props.innerRef,
      size = props.size,
      color = props.color,
      striped = props.striped,
      animated = props.animated,
      precision = props.precision,
      showPercentage = props.showPercentage,
      showValue = props.showValue,
      max = props.max,
      value = props.value,
      attributes = _objectWithoutPropertiesLoose(props, ["children", "className", "innerRef", "size", "color", "striped", "animated", "precision", "showPercentage", "showValue", "max", "value"]);

  var inheritedProps = {
    color: color,
    striped: striped,
    animated: animated,
    precision: precision,
    showPercentage: showPercentage,
    showValue: showValue,
    max: max,
    value: value
  };
  var progressClasses = (0, _classnames["default"])('progress', size && 'progress-' + size, className); // render

  return /*#__PURE__*/_react["default"].createElement("div", _extends({
    className: progressClasses
  }, attributes, {
    ref: innerRef
  }), /*#__PURE__*/_react["default"].createElement(Context.Provider, {
    value: {
      inheritedProps: inheritedProps
    }
  }, children || /*#__PURE__*/_react["default"].createElement(_CProgressBar["default"], null)));
};

CProgress.propTypes = process.env.NODE_ENV !== "production" ? {
  children: _propTypes["default"].node,
  className: _propTypes["default"].string,
  //
  innerRef: _propTypes["default"].oneOfType([_propTypes["default"].object, _propTypes["default"].func, _propTypes["default"].string]),
  size: _propTypes["default"].string,
  value: _propTypes["default"].oneOfType([_propTypes["default"].string, _propTypes["default"].number]),
  max: _propTypes["default"].oneOfType([_propTypes["default"].string, _propTypes["default"].number]),
  animated: _propTypes["default"].bool,
  striped: _propTypes["default"].bool,
  color: _propTypes["default"].string,
  precision: _propTypes["default"].number,
  showPercentage: _propTypes["default"].bool,
  showValue: _propTypes["default"].bool
} : {};
CProgress.defaultProps = {
  value: 0,
  max: 100,
  precision: 0
};
var _default = CProgress;
exports["default"] = _default;