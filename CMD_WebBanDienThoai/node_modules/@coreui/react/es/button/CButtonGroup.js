function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

import React from 'react';
import PropTypes from 'prop-types';
import classNames from 'classnames'; //component - CoreUI / CButtonGroup

var CButtonGroup = function CButtonGroup(props) {
  var className = props.className,
      innerRef = props.innerRef,
      size = props.size,
      vertical = props.vertical,
      attributes = _objectWithoutPropertiesLoose(props, ["className", "innerRef", "size", "vertical"]); //render


  var classes = classNames(className, size ? 'btn-group-' + size : false, vertical ? 'btn-group-vertical' : 'btn-group');
  return /*#__PURE__*/React.createElement("div", _extends({
    className: classes,
    role: "group"
  }, attributes, {
    ref: innerRef
  }));
};

CButtonGroup.propTypes = process.env.NODE_ENV !== "production" ? {
  className: PropTypes.string,
  //
  innerRef: PropTypes.oneOfType([PropTypes.object, PropTypes.func, PropTypes.string]),
  size: PropTypes.oneOf(['', 'sm', 'lg']),
  vertical: PropTypes.bool
} : {};
export default CButtonGroup;